/**
 * A16s directory config file.
 *
 * Vite is not aware of this config file's location.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * @note This entire file will be updated automatically.
 * @note Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 *
 * @see https://github.com/vitejs/vite-plugin-basic-ssl
 */

import path from 'node:path';

/**
 * Configures a16s directory for Vite.
 *
 * In the case of doing a secondary SSR build, we need to separate the SSR assets from the client-side assets. The
 * special folder `node_modules` was selected because it's ignored by Wrangler; {@see https://o5p.me/EqPjmv}.
 *
 * The most important things to keep in mind are:
 *
 * Our client-side build will have already generated all of the assets to be served statically by Cloudflare. Therefore,
 * we want to put all of the assets generated by an SSR build into a directory that Wrangler will ignore whenever it
 * compiles assets to serve statically. Otherwise, we’d end up with multiple copies of the same files on Cloudflare.
 *
 * When it comes to the SSR build generating SSR-specific assets, these will get compiled by Wrangler’s own bundling
 * system. Wrangler’s bundler does not ignore `node_modules`, it’s only the static asset compilation piece that ignores
 * `node_modules`. Therefore, if the SSR build has dependencies inside `node_modules/assets/a16s`, Cloudflare’s own
 * bundler will still be perfectly able to compile these into a unified worker bundle.
 *
 * @param   props Props from vite config file driver.
 *
 * @returns       A16s directory for Vite.
 */
export default async ({ isSSRBuild, distDir }) => {
    return path.resolve(distDir, '.' + (isSSRBuild ? '/node_modules' : '') + '/assets/a16s');
};
