/**
 * PostCSS config file.
 *
 * PostCSS is not aware of this config file's location.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * @note This entire file will be updated automatically.
 * @note Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 *
 * @see https://github.com/csstools/postcss-plugins/blob/main/plugin-packs/postcss-preset-env/FEATURES.md
 */

import path from 'node:path';
import { $fs } from '../../../node_modules/@clevercanyon/utilities.node/dist/index.js';

const __dirname = $fs.imuDirname(import.meta.url);
const projDir = path.resolve(__dirname, '../../..');

/**
 * Defines PostCSS configuration.
 */
export default async () => {
    /**
     * Composition.
     */
    return {
        /**
         * SCSS is not configured here, as it’s already backed into Vite; {@see https://o5p.me/CAJNAF}. To use `*.scss`
         * files, just make sure the `sass` package is installed as a dev dependency. Note: Sass runs before postCSS,
         * and therefore cannot interpolate Tailwind `theme()` function calls. i.e., Tailwind’s `theme()` function
         * works, but don’t try to feed a response into an SCSS variable or function.
         */
        plugins: [
            // Tailwind CSS plugin.
            (await import('tailwindcss')).default({ config: path.resolve(projDir, './tailwind.config.mjs') }),

            // Custom plugin that modifies a few Tailwind selectors.
            // This plugin was heavily inspired by; {@see https://o5p.me/MutM88}.
            {
                postcssPlugin: 'postcss-modify-selectors',
                Once(css) {
                    css.walkRules((rule) => {
                        // Initializes stack.
                        const modifiedSelectors = [];

                        // Iterates all rule selectors.
                        for (let selector of rule.selectors) {
                            // Shortens length of `lead` prose class selector.
                            selector = selector.replaceAll('[class~="lead"]', '.lead');

                            // Shortens length of `not-p` prose class selector.
                            // In our Tailwind implementation, a much shorter class `p` = `prose`.
                            // In our implementation, a much shorter `_` = `not-p` = `not-prose` = `not-basic`.
                            selector = selector.replaceAll('[class~="not-p"],[class~="not-p"] *', '._, ._ *');

                            // Pushes modified selector onto stack.
                            modifiedSelectors.push(selector);
                        }
                        rule.selectors = modifiedSelectors;
                    });
                },
            },
            // Present env plugin, which includes autoprefixer.
            (await import('postcss-preset-env')).default({ stage: 3, minimumVendorImplementations: 2, env: 'web' }),

            // Variable compression plugin. I have a request in for variable consolidation also.
            // {@see https://github.com/navanshu/postcss-variable-compress/issues/45}.
            (await import('postcss-variable-compress')).default(),
        ],
    };
};
