/**
 * `./.prettierignore` generator.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * @note This entire file will be updated automatically.
 * @note Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 */

import fs from 'node:fs';
import path from 'node:path';
import { $is, $path, $str, $time } from '../../../../node_modules/@clevercanyon/utilities/dist/index.js';
import generatedRegExp from '../updater/data/generated-regexp.mjs';

export default async ({ projDir }) => {
    /**
     * Initializes vars.
     */
    const prettierIgnoreFile = path.resolve(projDir, './.prettierignore');

    /**
     * Defines ignore contents.
     */
    let prettierIgnoreFileContentsIgnores = $str.dedent(`
        # Last generated ${$time.i18n()}.
    `);
    for (const [groupName, group] of Object.entries($path.defaultGitIgnoresByGroup)) {
        if (!['Dist', 'Packages', 'Version Control', 'Operating Systems'].includes(groupName)) {
            continue; // Not applicable; we only include select groups.
        }
        prettierIgnoreFileContentsIgnores += '\n\n# ' + groupName;

        if (!$is.array(group)) {
            for (const [subgroupName, subgroup] of Object.entries(group)) {
                prettierIgnoreFileContentsIgnores += '\n\n# » ' + subgroupName + '\n';

                for (const subgroupIgnore of subgroup) {
                    prettierIgnoreFileContentsIgnores += '\n' + subgroupIgnore;
                }
            }
        } else {
            prettierIgnoreFileContentsIgnores += '\n'; // Spacing.

            for (const groupIgnore of group) {
                prettierIgnoreFileContentsIgnores += '\n' + groupIgnore;
            }
        }
    }
    prettierIgnoreFileContentsIgnores +=
        '\n\n' +
        $str.dedent(`
        # \`.env.vault\` is generated by Dotenv Vault.
        # We don’t format this file for that reason.

        .env.vault

        # \`.editorconfig\` unsupported by Prettier at this time.
        # It's a properties file, but Prettier chokes on \`[*]\` section.

        *.editorconfig

        # \`.npmrc\` unsupported by Prettier at this time.
        # It's a properties file, but Prettier chokes on \`:\` in auth tokens.

        *.npmrc

        # EJS unsupported at this time.
        # @someday Build or find an EJS plugin.

        *.ejs
    `);

    /**
     * Defines `./.prettierignore` file contents.
     */
    const oldFileContents = fs.readFileSync(prettierIgnoreFile).toString();
    const prettierIgnoreFileContents = oldFileContents.replace(
        generatedRegExp,
        ($_, $1, $2, $3) =>
            $1 + //
            '\n\n' +
            prettierIgnoreFileContentsIgnores +
            '\n\n' +
            $3,
    );

    /**
     * Compiles `./.prettierignore` file contents.
     */
    fs.writeFileSync(prettierIgnoreFile, prettierIgnoreFileContents);
};
