/**
 * `./.npmignore` generator.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * @note This entire file will be updated automatically.
 * @note Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 */

import fs from 'node:fs';
import path from 'node:path';
import { $is, $path, $str, $time } from '../../../../node_modules/@clevercanyon/utilities/dist/index.js';
import generatedRegExp from '../updater/data/generated-regexp.mjs';

export default async ({ projDir }) => {
    /**
     * Initializes vars.
     */
    const npmIgnoreFile = path.resolve(projDir, './.npmignore');

    /**
     * Defines ignore contents.
     */
    let npmIgnoreFileContentsIgnores = $str.dedent(`
        # Last generated ${$time.i18n()}.
	`);
    for (const [groupName, group] of Object.entries($path.defaultNPMIgnoresByGroup)) {
        npmIgnoreFileContentsIgnores += '\n\n# ' + groupName;

        if (!$is.array(group)) {
            for (const [subgroupName, subgroup] of Object.entries(group)) {
                npmIgnoreFileContentsIgnores += '\n\n# Â» ' + subgroupName + '\n';

                for (const subgroupIgnore of subgroup) {
                    npmIgnoreFileContentsIgnores += '\n' + subgroupIgnore;
                }
            }
        } else {
            npmIgnoreFileContentsIgnores += '\n'; // Spacing.

            for (const groupIgnore of group) {
                npmIgnoreFileContentsIgnores += '\n' + groupIgnore;
            }
        }
    }

    /**
     * Defines `./.npmignore` file contents.
     */
    const oldFileContents = fs.readFileSync(npmIgnoreFile).toString();
    const npmIgnoreFileContents = oldFileContents.replace(
        generatedRegExp,
        ($_, $1, $2, $3) =>
            $1 + //
            '\n\n' +
            npmIgnoreFileContentsIgnores +
            '\n\n' +
            $3,
    );

    /**
     * Compiles `./.npmignore` file contents.
     */
    fs.writeFileSync(npmIgnoreFile, npmIgnoreFileContents);
};
