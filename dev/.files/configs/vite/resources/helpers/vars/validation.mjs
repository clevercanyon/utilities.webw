/**
 * Validates our Vite configuration vars.
 *
 * Vite is not aware of this file's location.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * @note This entire file will be updated automatically.
 * @note Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 */

import u from '../../../../../resources/utilities.mjs';

/**
 * Validates our Vite configuration vars.
 *
 * @param  props Props from vite config file driver.
 *
 * @throws       On any validation error.
 */
export default async ({ mode, isSSRBuild, appBaseURL, appType, targetEnv, targetEnvIsServer, appEntries }) => {
    if (!u.pkgName) {
        throw new Error('Apps must have a name.');
    }
    if (!u.pkgVersion) {
        throw new Error('Apps must have a version.');
    }
    if (!appEntries.length) {
        throw new Error('Apps must have at least one entry point.');
    }
    if (isSSRBuild && !targetEnvIsServer) {
        throw new Error('SSR builds must target an SSR environment.');
    }
    if (!['dev', 'ci', 'stage', 'prod'].includes(mode)) {
        throw new Error('Required `mode` is missing or invalid. Expecting `dev|ci|stage|prod`.');
    }
    if (!['spa', 'mpa', 'cma', 'lib'].includes(appType)) {
        throw new Error('Must have a valid `config.c10n.&.build.appType` in `package.json`.');
    }
    if ((['spa', 'mpa'].includes(appType) || (['cfw'].includes(targetEnv) && !['lib'].includes(appType))) && !appBaseURL) {
        throw new Error('Must have a valid `APP_BASE_URL` environment variable.');
    }
    if (!['any', 'node', 'cfw', 'cfp', 'web', 'webw'].includes(targetEnv)) {
        throw new Error('Must have a valid `config.c10n.&.build.targetEnv` in `package.json`.');
    }
};
