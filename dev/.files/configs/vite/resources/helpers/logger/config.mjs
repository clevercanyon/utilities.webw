/**
 * Logger configuration.
 *
 * Vite is not aware of this config file's location.
 *
 * @note PLEASE DO NOT EDIT THIS FILE!
 * @note This entire file will be updated automatically.
 * @note Instead of editing here, please review <https://github.com/clevercanyon/skeleton>.
 *
 * @see https://vite.dev/config/shared-options.html#customlogger
 */

import { createLogger } from 'vite';

/**
 * Configures logger.
 *
 * @param   props Props from vite config file driver.
 *
 * @returns       Logger configuration.
 */
export default async (/* {} */) => {
    const loggerConfig = createLogger(),
        _originalWarnOnce = loggerConfig.warnOnce;

    loggerConfig.warnOnce = (msg, options) => {
        if (msg.includes("didn't resolve at build time, it will remain unchanged to be resolved at runtime")) {
            return; // Safe to ignore. Some of our CSS resources, for example, reference cargo assets.
            // Cargo assets can only be resolved at runtime. Thereâ€™s no need for this warning; we are aware.
        }
        if (/^Sourcemap for "[^"]+\.mdx" points to missing source files$/iu.test(msg)) {
            return; // Safe to ignore. Some MDX glob imports contain query strings, which makes the filesystem path unreachable.
            // This is a consequence of us needing to create a distinct import for frontMatter. See `importGlobRestoreExtension` below.
        }
        _originalWarnOnce(msg, options);
    };
    return { loggerConfig };
};
